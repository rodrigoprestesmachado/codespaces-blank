Id;Role;Message;Datetime;Classification;Topic;Change;AI - 4%
HWbe9EfN9GMIlyQ;User;que tipos de recursion hay;20:56:42 - 28/05/2024;Conceptual Questions;Recursion;No;Yes
HWbe9EfN9GMIlyQ;semantic_search;"# Departamento de Ingeniería Telemática  ## Recursión  ### Programación de sistemas  **MATERIALES BASADOS EN EL TRABAJO DE DIVERSOS AUTORES:**   Carlos Alario Hoyos, Carlos Delgado Kloos, Mª Carmen Fernández Panadero, Julio Villena Román  - Recursión   - Tipos de recursión   - Recursión vs.```markdown # Departamento de Ingeniería Telemática  ## Recursión  ### Programación de sistemas  **MATERIALES BASADOS EN EL TRABAJO DE DIVERSOS AUTORES:**   Carlos Alario Hoyos, Carlos Delgado Kloos, Mª Carmen Fernández Panadero, Julio Villena Román  ### Contenidos  - Recursión - Tipos de recursión - Recursión vs.iteración  #### Recursión  - Proceso por el cual un método se llama a sí mismo de forma continuada hasta que se llegue a un determinado estado   - **Caso recursivo:** El método se invoca a sí mismo   - **Caso base:** Permite salir de la recursión - Un método recursivo debe tener al menos un caso recursivo y al menos un caso base   - El caso recursivo debe aproximarse al caso base - Los métodos recursivos utilizan sentencias más sencillas para simplificar problemas complejos  #### Ejemplo 1: Sumatorio de 1 a n (con n > 0)  ```java 
public static long s (int n){     
    if (n==1){         
        return 1;     
    }     
    else{         
        return s(n-1)+n;     
    } 
}   
Caso base 
Caso recursivo  
Ejemplo 2: Recursión mal diseñada* 
public static long s (int n){     
    if (n==1){         
        return 1;     
    }     
    else{         
        return s(n+1)+n;     
    } 
}   
Caso base 
Caso recursivo (si n > 1)  
Ejemplo 3: Sumatorio de n a 1000 
public static long s (int n){     
    if (n==1000){         
        return 1000;     
    }     
    else if (n>1000){         
        return 0;     
    }     
    else{         
        return s(n+1)+n;     
    } 
}   
Casos base 
Caso recursivo  
Ejemplo 4: Cuenta atrás (con contador > 0) 
public static void cuentaAtras(int contador){     
    if(contador == 0){         
        return;     
    }     
    else{         
        System.out.println(contador+"" "");         
        cuentaAtras(--contador);         
        return;     
    } 
}   
Caso base 
Caso recursivo  
Ejercicio 1  
Implementa el método recursivo square(int n), el cual permite calcular el cuadrado de n (cuando n > 1)Modificadores de acceso   Programación orientada a objetos  2.1. Herencia  2.2. Sobreescritura y sobrecarga  2.3. Casting  2.4. Clases abstractas e interfaces  2.5. Herencia múltiple y polimorfismo. Recursión  3.1. Concepto de recursión  3.2. Tipos de recursión (lineal, no lineal, mútua)  3.3. Recursión vs. iteración  3.4. Ejemplos de algoritmos recursivos Estructuras de datos, algoritmos y ejemplos de implementación  4.1. Listas enlazadas y doblemente enlazadas  4.2. Pilas  4.3. Colas (simples, dobles con prioridad)  4.4.Iteración   La recursión lineal por la cola se puede convertir de forma inmediata en iteración (bucle). Para otras formas de recursión se requieren técnicas de transformación de programas y posiblemente estructuras de datos más complejas.  Resumen  Identificar el rango de valores para terminación Caso(s) base y caso(s) recursivos que se aproximan al base Recursión lineal (máx. 1 llamada recursiva por rama) Por la cola (resultado en la última operación y fácilmente convertible a bucle) No por la cola (cálculo costoso)   Recursión no lineal (más de 1 llamada recursiva en alguna rama) Cascada o anidada.";20:56:42 - 28/05/2024;;;;
HWbe9EfN9GMIlyQ;CharlieBOT;En el ámbito de la programación de sistemas, existen varios tipos de recursión:  Recursión lineal: En este tipo de recursión, cada llamada recursiva realiza al máximo una llamada adicional. A su vez, la recursión lineal puede ser por la cola o no por la cola.  Recursión no lineal: En este caso, se realizan más de una llamada recursiva en alguna rama del proceso.   Cabe destacar que la recursión lineal por la cola se puede convertir de forma inmediata en iteración (bucle), mientras que para otras formas de recursión se requieren técnicas de transformación de programas y posiblemente estructuras de datos más complejas. Es importante tener en cuenta estos tipos de recursión al diseñar algoritmos recursivos, ya que cada tipo tiene implicaciones en la eficiencia y la facilidad de transformación en iteración.;20:56:45 - 28/05/2024;;;;